[{"content":"","date":"30 March 2025","externalUrl":null,"permalink":"/","section":"ALOWHIT","summary":"","title":"ALOWHIT","type":"page"},{"content":"","date":"30 March 2025","externalUrl":null,"permalink":"/posts/","section":"Posts","summary":"","title":"Posts","type":"posts"},{"content":"","date":"29 March 2025","externalUrl":null,"permalink":"/tags/blowfish/","section":"Tags","summary":"","title":"Blowfish","type":"tags"},{"content":"If you haven\u0026rsquo;t used Hugo before, you need to understand how to install Hugo on your local machine. You can check Hugo is installed by running the command hugo version.\nIf you haven\u0026rsquo;t used Go and Git before, you\u0026rsquo;ll need to know about installing Git on your local machine, and then install Go on your local machine from the official Go website. The version should be 1.23.0 or above.\nCreate a Git Project # Create a git project for your website link. The repo name should be in the format \u0026lt;username\u0026gt;.github.io, which will also serve as the entry point for your website domain. Then, in your project folder, enter git init -b main to initialize your git repo.\nTips: if you want to make more repo\u0026rsquo;s website, use \u0026lt;username\u0026gt;.github.io/\u0026lt;repo_name\u0026gt; to load your website.\nDeploy Git and Prepare for Github Pages Service # This article won\u0026rsquo;t delve too much into the related usage of synchronizing Git and Github. After the above steps, your default branch will be main. (with git init -b main) Next, we\u0026rsquo;ll need a branch called gh-pages; This branch will be used for future workflows, which is the Action service provided by Github.\nbranch : main gh-pages\n.gitignore File # Files to ignore:\n#others node_modules .hugo_build.lock # Hugo public Create a Workflow # Create an empty folder named .github/workflows in your directory, then name this filegh-pages.yml. You can see in the code below:\n# .github/workflows/gh-pages.yml name: GitHub Pages on: push: branches: - main jobs: build-deploy: runs-on: ubuntu-20.04 concurrency: group: ${{ github.workflow }}-${{ github.ref }} steps: - name: Checkout uses: actions/checkout@v3 with: submodules: true fetch-depth: 0 - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: \u0026#34;latest\u0026#34; - name: Build run: hugo --minify - name: Deploy uses: peaceiris/actions-gh-pages@v3 if: ${{ github.ref == \u0026#39;refs/heads/main\u0026#39; }} with: github_token: ${{ secrets.GITHUB_TOKEN }} publish_branch: gh-pages publish_dir: ./public After you push the relevant data tomain, the workflow will automatically create build-deploy, and finally set up the web content on gh-pages.\n!!Note: You need to enable read and write permissions for automation in your repo and choose the branch for displaying Pages externally to set up the website.\nHow to Adjust Action Write Permissions # First, enable write permissions for Actions:\nSettings-\u0026gt;Code and automation-\u0026gt;Actions-\u0026gt;General-\u0026gt; [Side page]-\u0026gt;Workflow permissions-\u0026gt; Select the radio button \u0026ldquo;Read and write permissions\u0026rdquo;-\u0026gt;Click \u0026ldquo;Save\u0026rdquo; to store changes\nNext, select your branch which using for Github Page：\nSettings-\u0026gt;Code and automation-\u0026gt;Pages-\u0026gt;[Side page]-\u0026gt; Build and deployment-\u0026gt; Branch-\u0026gt;Drop down to change \u0026ldquo;main\u0026rdquo; to \u0026ldquo;gh-pages\u0026rdquo;-\u0026gt;Click \u0026ldquo;Save\u0026rdquo; to store changes\nCreate a New Site # If you plan to create website data in an already created empty folder, use hugo new site . to create a basic Hugo project. (If the folder already has content, you can use --force to force initialization: hugo new site . --force)\nIf you don\u0026rsquo;t have an empty website project folder yet, you can use the hugo new site mywebsite command to create a new Hugo site in a new mywebsite directory.\nNext, download the blowfish theme and choose the channel you want to use. The author used manual file copying, which means directly downloading the latest version of the source code and extracting it to ./theme/blowfish.\nSet Up the Theme Configuration Files # In your website\u0026rsquo;s root directory, delete the hugo.toml file automatically generated by Hugo. Instead, we\u0026rsquo;ll use the *.toml files that exist in the theme. Move the relevant suffix files from ./theme/blowfish/config/_default to the ./config/_default/ directory in the web root directory. This will ensure your theme settings are accurate and allow you to easily customize the related theme.\n‼Note: If a module.toml file already exists in the project, do not overwrite it!\nAfter you\u0026rsquo;ve copied these files, your config directory should look like this:\nconfig/_default/ ├─ hugo.toml ├─ languages.en.toml ├─ markup.toml ├─ menus.en.toml ├─ module.toml # Installed via Hugo modules └─ params.toml ‼Important: If you didn\u0026rsquo;t install Blowfish using Hugo modules, you must add theme = \u0026quot;blowfish\u0026quot; to the hugo.toml file. (Or you should see # theme = \u0026quot;blowfish\u0026quot; # UNCOMMENT THIS LINE in the hugo.toml file, just remove the comment to apply the related theme)\nNext Steps # The basic Blowfish installation is now complete. Please continue reading the original tutorial\u0026rsquo;s Getting Started Guide to learn more about theme configuration. I will also write more articles in the future to introduce simple website settings.\n","date":"29 March 2025","externalUrl":null,"permalink":"/posts/setup-hugo-with-blowfish-to-github-page/","section":"Posts","summary":"","title":"How to Deploy Hugo on Github (with Blowfish Theme)","type":"posts"},{"content":"","date":"29 March 2025","externalUrl":null,"permalink":"/tags/hugo/","section":"Tags","summary":"","title":"Hugo","type":"tags"},{"content":"","date":"29 March 2025","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"},{"content":"","date":"29 March 2025","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","date":"29 March 2025","externalUrl":null,"permalink":"/series/tutorial-for-hugo/","section":"Series","summary":"","title":"Tutorial for Hugo","type":"series"},{"content":"","date":"29 March 2025","externalUrl":null,"permalink":"/tags/website/","section":"Tags","summary":"","title":"Website","type":"tags"},{"content":"","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"}]