[{"content":"","date":"3 August 2025","externalUrl":null,"permalink":"/","section":"ALOWHIT","summary":"","title":"ALOWHIT","type":"page"},{"content":"","date":"3 August 2025","externalUrl":null,"permalink":"/tags/blog/","section":"Tags","summary":"","title":"Blog","type":"tags"},{"content":"","date":"3 August 2025","externalUrl":null,"permalink":"/posts/","section":"Posts","summary":"","title":"Posts","type":"posts"},{"content":"","date":"3 August 2025","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"似乎沒有認識的人了\n也不認識任何人\n事已至此, 還是畫畫好了\n","date":"3 August 2025","externalUrl":null,"permalink":"/posts/%E6%97%A5%E8%AA%8C003/","section":"Posts","summary":"","title":"感覺過去和我切割得差不多了","type":"posts"},{"content":"其實還打算搞個開發直播的，所以弄了個封面\n但我還沒想好我該怎麼推廣自己。\n或許你看到這篇文的時候，我已經是個能令你也感興趣的人了？\n","date":"17 May 2025","externalUrl":null,"permalink":"/posts/msw-update-ep1/","section":"Posts","summary":"","title":"[MSW] 打算在楓之谷世界進行遊戲開發","type":"posts"},{"content":"","date":"17 May 2025","externalUrl":null,"permalink":"/tags/maplestoryworlds/","section":"Tags","summary":"","title":"MapleStoryWorlds","type":"tags"},{"content":"","date":"17 May 2025","externalUrl":null,"permalink":"/tags/msw/","section":"Tags","summary":"","title":"MSW","type":"tags"},{"content":"我在想我究竟要做什麼遊戲上Steam\n對，就只是在想這件事然後我發了篇文。\n","date":"15 April 2025","externalUrl":null,"permalink":"/posts/%E6%97%A5%E8%AA%8C002/","section":"Posts","summary":"","title":"無題","type":"posts"},{"content":"","date":"8 April 2025","externalUrl":null,"permalink":"/tags/cardgame/","section":"Tags","summary":"","title":"CardGame","type":"tags"},{"content":"既然有了框架，那接下來就要給框架變得可根據資料切換顯示。\n而以下就是我完成基礎的調試用+顯示用框架。 在這個時間段，我還沒有完成能力詞條判定；\n因為能力詞條需要一個實例化的環境，而相關的觸發方式都和回合中的機制有關，\n像是發動時機，進行特定的動作等等。\n因此我決定延後到基本的數值運算功能，再做能力值疊加判定。\n所以，我往顯示方面開始做功夫了。\n確定遊戲的表現形式 # 那這個專案，我決定以3D的表現形式去實現表現。\n在簡略的配置了框架後，發現表現手法不太行，\n主要是遊戲內的機制擁有\u0026quot;出牌\u0026quot;，這個出牌會影響整個場地的大小和上限。\n於是乎，我就想到了玩過的某個技能型手機遊戲。\n它會用透明的方框作為卡牌放置區，那我就想弄個差不多的東西。\n效果如下：\n測試遊戲性能和方案的可行性 # 在完成了基本的規劃後，我想先去試著理解Godot對遊戲的性能需求。\n因此我簡單製作了下方的卡片節點：\n並且使用panku console這個插件協助我Debug遊戲。\n而實際運行了一段時間，卡牌張數很多也不太會影響遊戲效能表現。\n下集預告 # 讓卡牌能夠在場地中放置、使用能力、進行攻擊計算、卡牌放置到傷害區 等基本規則操作 下下集才開始對能力進行製作，設定更多的卡牌時機。\n","date":"8 April 2025","externalUrl":null,"permalink":"/posts/godot-card-game-ep3/","section":"Posts","summary":"","title":"EP.3 確立基本的卡牌資訊框架 feat.《星界英雄》","type":"posts"},{"content":"","date":"8 April 2025","externalUrl":null,"permalink":"/tags/godot/","section":"Tags","summary":"","title":"Godot","type":"tags"},{"content":"","date":"8 April 2025","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"},{"content":"","date":"8 April 2025","externalUrl":null,"permalink":"/series/zodiacchampion/","section":"Series","summary":"","title":"ZodiacChampion","type":"series"},{"content":"","date":"8 April 2025","externalUrl":null,"permalink":"/tags/zodiacchampion/","section":"Tags","summary":"","title":"ZodiacChampion","type":"tags"},{"content":"今天，就來製作對應的卡牌資產；目前是以還原原本遊戲卡牌顯示的相關資訊為目的去製作相關素材。\n首先，確定畫面有的基本資訊。\n今天，就來試著先製作星使牌有的相關內容。\n經過兩小時的奮戰，我成功生出了以下的素材，並調整好以後會用到的卡牌UI框架。\n參考了新版UI，加入了傷害屬性框和部分卡牌資訊的放置位置。\n但整體風格還是想以手上能參考的舊版UI進行還原。\n不過今天時間不多了，之後，我也會去把星術牌和星神牌的卡牌資訊欄也做進去。\n另外，雖然我很想搞搞看卡牌稀有度的雷射鍍閃，但那不是優先級的任務，因此會放到較後的階段才嘗試製作相關Shader。\n下集預告 # 應該會把基本的卡牌資訊設置腳本給寫出來，把相關顯示功能給做基本的規範化。 之後就是把遊戲中的所有卡牌嘗試逐一還原進去，以還原原本的卡牌作為主要目標去製作對應的卡牌數據庫。\n","date":"6 April 2025","externalUrl":null,"permalink":"/posts/godot-card-game-ep2/","section":"Posts","summary":"","title":"EP.2 繪製基本的遊戲資產 feat.《星界英雄》","type":"posts"},{"content":"很高興獲得了來自《星界英雄》設計者帥狗的許可， 我可以使用Godot來將相關遊戲玩法電子化，並能使用遊戲框架和玩法使用在項目中。 我獲得的許可如下：\n對相關學習專案寫日誌並發佈到個人網站 我承諾只能部分公開，因此局限於我認識的朋友。 條件如下：\n禁止商用 禁止直接使用原發售卡牌的插畫。 同時，設計者帥狗也表示了希望能試玩，我也會很樂意分享給他（在完成該學習項目後）。\n開始理清相關遊戲規則 # 既然是要做一個卡牌遊戲，那我第一件事就是先把關鍵的核心，卡牌給還原出來。\n而還原一個卡牌，那我必須要定義一張卡牌上面有的資訊。\n在遊戲內雖然有三種不同的卡牌，但他們身上的資訊是差不多的。\n卡牌資訊 # 分為 星使牌、星術牌、星神牌 而它們都可以作為星術牌來使用，這代表它們的設計有一定程度的相似。\n那一張卡牌有什麼資訊呢？\n卡牌名稱 卡牌資訊：繪師、系列編號、種類（背景顏色）、星座圖標（或特定圖標） 卡牌屬性：（太陽/月亮） 卡牌效果 星使牌和星神牌是差不多的東西，它們共通點為\n代價需求：激活該卡需要特定的代價 及其 數字 而星使牌更是多出了三個屬性\n力量：攻擊判定時，若超出對方護盾則視為攻擊成功。 護盾：攻擊判定時，若受擊方該數值多於攻擊方的力量，則視為攻擊失敗（不計算傷害，但計算*攻擊事件） 傷害：用來決定該卡攻擊成功後的基礎傷害 基於卡牌資訊進行遊戲資產的製作 # 理解了以上的資訊後，接下來就輪到繪製卡牌資訊的動作了。\n我選擇對目前官網FB釋出的所有圖片進行二次創作，也就是 透過與原本卡牌完全不同的卡面、故事、卡牌名來還原原本的卡牌設計，既能還原原本的框架，也避免了使用版權圖造成的問題。\n接下來的規劃會是繪製卡牌屬性、十二星座、代價需求等等的資訊相關圖標或者是卡牌的排版。\n同時，我會希望將星術牌和星神牌的下方能力欄，像星使牌一樣貼上左上角的屬性，方便識別。\n剩下的遊戲系統以及遊戲規則將會在繪製完成後，在下一篇的日誌進行補全。\n下集預告 # 預計會將目前的玩法視為 常規玩法，預計會先往製作常規玩法的場地佈置、組牌需求開始做起。\n未來將會有更多的像是回合判定、傷害計算、卡牌連鎖對應、卡牌資料、卡牌實例等各種坑要填。\n","date":"5 April 2025","externalUrl":null,"permalink":"/posts/godot-card-game-ep1/","section":"Posts","summary":"","title":"EP.1 開始製作卡牌遊戲框架復刻的日誌記錄 feat.《星界英雄》","type":"posts"},{"content":"嗯，就是標題那樣。 買了參考書，等送來就開始用。\n之前賣過的那個鼓勵人為主的日本教學書，對我的作用只能說是幾乎沒作用。\n不是我笨，就是我並不是客群之一。\n大概就是那麼一回事了吧。\n總之，希望未來的我能有更多的進步。\n","date":"1 April 2025","externalUrl":null,"permalink":"/posts/%E6%97%A5%E8%AA%8C001/","section":"Posts","summary":"","title":"今天決定好努力學畫畫了","type":"posts"},{"content":"","date":"29 March 2025","externalUrl":null,"permalink":"/tags/blowfish/","section":"Tags","summary":"","title":"Blowfish","type":"tags"},{"content":"","date":"29 March 2025","externalUrl":null,"permalink":"/tags/hugo/","section":"Tags","summary":"","title":"Hugo","type":"tags"},{"content":"","date":"29 March 2025","externalUrl":null,"permalink":"/series/tutorial-for-hugo/","section":"Series","summary":"","title":"Tutorial for Hugo","type":"series"},{"content":"","date":"29 March 2025","externalUrl":null,"permalink":"/tags/website/","section":"Tags","summary":"","title":"Website","type":"tags"},{"content":"如果你之前沒有使用過 Hugo，你首先需要了解在本地機器安装 Hugo。你可以通過運行命令 hugo version 来檢查是否安裝完成。\n如果你之前連Go和Git都沒有使用過，那你更需要先去了解一下在本地機器安裝 Git ，再從Go官網給本地機器安裝 Go，版本需要1.23.0或以上。\n創建一個git項目 # 為你的網站鏈接創建一個git項目，創建的repo名需要以 \u0026lt;username\u0026gt;.github.io 的方式去命名，它也會作為你的網站域名入口而被創立。 之後，在你的項目資料夾中輸入git init -b main，從而初始化你的 git repo。\n部署Git並為Github的網頁服務做前置準備 # 本文就不多著墨在同步Git和Github的相關用法了。 經過上方的做法，你默認的branch會是main。 其次，我們還會需要一個叫做gh-pages的分支； 該分支將會用於日後的 workflows ，也就是Github提供的Action服務， 能夠根據你推送的網頁更新作自動化生成，並掛載Hugo來架設對外瀏覽用的頁面。 branch : main gh-pages\n.gitignore的文件 # 要無視的文件\n#others node_modules .hugo_build.lock # Hugo public 創建一個工作流 # 在資料夾創建一個.github/workflows的空白資料夾，再把這個檔案命名為gh-pages.yml，在程式碼下面能夠看到： 當你推送main的相關資料後，工作流就會自動創建build-deploy，最後在gh-pages進行網頁內容架設。\n# .github/workflows/gh-pages.yml name: GitHub Pages on: push: branches: - main jobs: build-deploy: runs-on: ubuntu-latest concurrency: group: ${{ github.workflow }}-${{ github.ref }} steps: - name: Checkout uses: actions/checkout@v3 with: submodules: true fetch-depth: 0 - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: \u0026#34;latest\u0026#34; - name: Build run: hugo --minify - name: Deploy uses: peaceiris/actions-gh-pages@v3 if: ${{ github.ref == \u0026#39;refs/heads/main\u0026#39; }} with: github_token: ${{ secrets.GITHUB_TOKEN }} publish_branch: gh-pages publish_dir: ./public ‼注意: 你需要給你的repo打開自動化的讀寫權限以及選擇對外展示的Pages的branch，從而實現架設網站。\n如何調整Action的寫入權限 # 先打開Actions的寫入權限：\nSettings-\u0026gt;Code and automation-\u0026gt;Actions-\u0026gt;General-\u0026gt; 側邊頁-\u0026gt;Workflow permissions-\u0026gt; 把圓點選擇為Read and write permissions-\u0026gt;按下Save儲存變更\n接著是選擇你的掛載頁面的branch：\nSettings-\u0026gt;Code and automation-\u0026gt;Pages-\u0026gt;側邊頁-\u0026gt; Build and deployment-\u0026gt; Branch-\u0026gt;下拉把main改gh-pages-\u0026gt;選擇Save儲存變更\n創建新站點 # 如果你打算在一個已經創建的空資料夾下創建網站資料，使用hugo new site . 進行創建基本的Hugo項目。（假設資料夾已經有東西，可使用--force來強制初始化hugo new site . --force） 若你還未有空的網站項目資料夾，可以使用 hugo new site mywebsite 命令，可以在mywebsite目錄下創建一个新的 Hugo 站點。\n接下來，去下載blowfish主題 選擇你想使用的渠道，筆者用的是手動文件複製，也就是直接下載最新版的source_code並且解壓縮至 ./theme/blowfish。\n設置主題的配置文件 # 你在的網站根目錄中，刪除 Hugo 自動生成的 hugo.toml 文件。取而代之的，我們會使用主題中存在的 *.toml 文件，將./theme/blowfish/config/_defualt 中擁有的相關後綴名文件，搬到網頁根目錄的 ./config/_default/ 目錄中。這將確保你的主題設置準確無誤，並且在此基礎上也能輕鬆地自定義相關主題。\n‼注意: 如果項目中已經存在了 module.toml 文件，請不要覆蓋它！\n在你複製了這些文件之後，你的 config 目錄應該如下圖所示：\nconfig/_default/ ├─ hugo.toml ├─ languages.en.toml ├─ markup.toml ├─ menus.en.toml ├─ module.toml # 通过 Hugo 模块安装 └─ params.toml ‼重要: 如果你沒有用 Hugo 的模塊安裝 Blowfish，那你必須要在 hugo.toml 文件中添加 theme = \u0026quot;blowfish\u0026quot;。（或你應該會在對應文件看到# theme = \u0026quot;blowfish\u0026quot; # UNCOMMENT THIS LINE，刪除注釋即可套用相關主題）\n下一步 # 基本的 Blowfish 安裝已經完成。請繼續閱讀原文教學的 入门指南，來了解更多關於主題配置的相關內容。 我也會在之後撰寫對應的文章來介紹簡單的網頁設定。\n","date":"29 March 2025","externalUrl":null,"permalink":"/posts/setup-hugo-with-blowfish-to-github-page/","section":"Posts","summary":"","title":"如何在Github佈置Hugo（blowfish主題）","type":"posts"},{"content":"","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"}]